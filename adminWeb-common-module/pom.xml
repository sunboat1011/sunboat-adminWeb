<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 继承父工程（核心：确保所有依赖版本继承父POM的dependencyManagement） -->
    <parent>
        <groupId>com.sunboat</groupId>
        <artifactId>adminWeb</artifactId>
        <version>1.0.0</version>
<!--        <relativePath>../pom.xml</relativePath> &lt;!&ndash; 父POM在子模块上一级目录，路径需正确 &ndash;&gt;-->
    </parent>

    <!-- 子模块信息（artifactId唯一，version继承父POM定义的adminWeb-common-module.version） -->
    <artifactId>adminWeb-common-module</artifactId>
<!--    <version>${adminWeb-common-module.version}</version>-->
    <packaging>jar</packaging> <!-- 普通工具模块，打包为jar -->

    <dependencies>
        <!-- 1. Spring Boot 基础依赖（无版本：继承父POM） -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId> <!-- 核心 Starter，无Web依赖 -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId> <!-- 若需Web能力，保留；否则可删除 -->
            <!-- 关键修改：删除手动指定的3.2.1版本，避免与父POM的2.7.18冲突 -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <!-- 关键修改：删除手动指定的3.2.1版本，继承父POM版本 -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- 无需单独引入junit-jupiter-api：spring-boot-starter-test已包含 -->
        </dependency>

        <!-- 2. 项目内部依赖（依赖common-core，无版本：继承父POM） -->
        <dependency>
            <groupId>com.sunboat</groupId>
            <artifactId>common-core</artifactId>
        </dependency>

        <!-- 3. 第三方依赖（无版本：继承父POM） -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-generator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <!-- 可选：spring-boot-starter-web已包含此依赖，若需单独控制可保留，否则可删除 -->
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!-- 4. 中间件依赖（无版本：继承父POM） -->
        <dependency>
            <groupId>com.alibaba.nacos</groupId>
            <artifactId>nacos-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>nacos-config-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
    </dependencies>

    <!-- 构建配置（继承父POM的编译插件，无需重复定义，仅保留资源过滤） -->
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering> <!-- 开启资源过滤，支持占位符替换 -->
            </resource>
        </resources>
        <!-- 无需重复定义maven-compiler-plugin：父POM已统一配置 -->
    </build>
</project>