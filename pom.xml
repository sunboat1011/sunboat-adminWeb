<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 1. 项目基本信息 -->
    <groupId>com.sunboat</groupId>
    <artifactId>adminWeb</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <description>adminWeb 项目父工程（统一管理子模块和依赖版本）</description>

    <!-- 2. 继承 Spring Boot 官方父工程（版本固定为2.7.18，子模块所有Spring依赖均继承此版本） -->
<!--    <parent>-->
<!--        <groupId>org.springframework.boot</groupId>-->
<!--        <artifactId>spring-boot-starter-parent</artifactId>-->
<!--        <version>2.7.18</version>-->
<!--&lt;!&ndash;        <relativePath/> &lt;!&ndash; 优先从Maven仓库拉取，避免本地路径问题 &ndash;&gt;&ndash;&gt;-->
<!--    </parent>-->

    <!-- 3. 子模块声明（确保Maven能识别所有子模块） -->
    <modules>
        <module>adminWeb-common-module</module>
        <module>adminWeb-business-module</module>
    </modules>

    <!-- 4. 全局属性（统一管理所有自定义版本，子模块可直接引用） -->
    <properties>
        <!-- 项目内部模块版本 -->
        <adminWeb-common-module.version>1.0.9-adminWeb-SNAPSHOT</adminWeb-common-module.version>
        <common-core.version>1.0.0-third-SNAPSHOT</common-core.version>

        <!-- 基础环境版本（与Spring Boot 2.7.18兼容） -->
        <java.version>1.8</java.version>
        <spring-auth-server.version>0.4.0</spring-auth-server.version> <!-- 与2.7.x兼容的版本 -->

        <!-- 第三方依赖版本（统一管理，避免子模块重复定义） -->
        <mybatis-plus.version>3.5.3.2</mybatis-plus.version>
        <mybatis-plus-generator.version>3.5.9</mybatis-plus-generator.version>
        <hutool.version>5.8.16</hutool.version>
        <lombok.version>1.18.12</lombok.version>
        <mysql-connector.version>8.0.26</mysql-connector.version>
        <nacos-client.version>2.2.0</nacos-client.version>
        <nacos-config-starter.version>0.2.11</nacos-config-starter.version>
        <spring-cloud-bootstrap.version>3.1.5</spring-cloud-bootstrap.version> <!-- 与2.7.x兼容 -->
        <freemarker.version>2.3.31</freemarker.version>
    </properties>

    <!-- 5. 依赖管理（核心：子模块需显式引入依赖，但无需指定版本，自动继承此处配置） -->
    <dependencyManagement>
        <dependencies>
            <!-- JWT 工具（支持 JDK8） -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>0.11.5</version> <!-- 支持 JDK8 的最后一个版本 -->
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>0.11.5</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>0.11.5</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.18.3</version>
            </dependency>
            <!-- ===== 项目内部模块（子模块间依赖时用） ===== -->
            <dependency>
                <groupId>com.sunboat</groupId>
                <artifactId>adminWeb-common-module</artifactId>
                <version>${adminWeb-common-module.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sunboat</groupId>
                <artifactId>adminWeb-business-module</artifactId>
                <version>${project.version}</version> <!-- 继承父工程版本1.0.0 -->
            </dependency>
            <dependency>
                <groupId>com.sunboat</groupId>
                <artifactId>common-core</artifactId>
                <version>${common-core.version}</version>
            </dependency>

            <!-- ===== Spring Boot 核心依赖（无版本：继承spring-boot-starter-parent的版本） ===== -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>2.7.18</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>2.7.18</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>2.7.18</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>5.7.10</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>2.7.18</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>2.7.18</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>2.7.18</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-logging</artifactId>
                <version>2.7.18</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>2.7.18</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>2.7.18</version>
                <scope>test</scope>
                <!-- 排除重复的junit，避免冲突（spring-boot-starter-test已包含junit-jupiter） -->
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- ===== 第三方工具/ORM（版本引用全局属性） ===== -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
                <scope>runtime</scope> <!-- 运行时依赖，编译不依赖 -->
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus-generator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>false</optional> <!-- 确保子模块能直接使用，无需重复引入 -->
            </dependency>

            <!-- ===== 中间件（Nacos） ===== -->
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-config-spring-boot-starter</artifactId>
                <version>${nacos-config-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bootstrap</artifactId>
                <version>${spring-cloud-bootstrap.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 6. 构建插件（统一管理编译、打包配置，子模块可继承） -->
    <build>
        <plugins>
            <!-- Spring Boot 打包插件（版本继承spring-boot-starter-parent，无需手动指定） -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.7.18</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- 编译插件（统一JDK版本为1.8） -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version> <!-- 固定插件版本，避免兼容性问题 -->
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding> <!-- 统一编码，避免乱码 -->
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 7. 分发管理（仓库配置不变，确保快照/正式版本能正确上传） -->
    <distributionManagement>
        <!-- 发布版本仓库 -->
        <repository>
            <id>sunboat-maven-repo</id>
            <name>sunboat-maven-repo</name>
            <url>http://localhost:8081/repository/sunboat-maven-repo/</url>
        </repository>
        <!-- 快照版本仓库 -->
        <snapshotRepository>
            <id>sunboat-maven-repo</id>
            <name>sunboat-maven-repo</name>
            <url>http://localhost:8081/repository/sunboat-maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>